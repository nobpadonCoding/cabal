{"version":3,"sources":["components/CharacterName.js","components/CharacterSelect.js","components/StatChart.js","reducers/attribute.reducer.js","components/StatAttribute.js","components/StatDisplay.js","App.js","reportWebVitals.js","reducers/index.js","index.js"],"names":["CharacterName","Paper","elevation","style","marginTop","TextField","fullWidth","id","label","CharacterSelect","useStyle","makeStyles","theme","image","marginLeft","width","height","React","useState","CharacterList","TotalCharactors","setTotalCharactors","useEffect","length","classes","naturalSlideWidth","naturalSlideHeight","totalSlides","infinite","map","item","index","Grid","container","direction","justify","alignItems","className","alt","src","process","StatChart","attributeReducer","useSelector","attribute","chartOption","setchartOption","chartSeries","setchartSeries","chart","xaxis","categories","attributeList","name","data","attributeValue","options","series","type","actionTypes","initialState","actions","payload","StatAttribute","props","dispatch","useDispatch","attReducer","setname","setattributeValue","obj","attributeRedux","padding","margin","Typography","gutterBottom","Slider","defaultValue","getAriaValueText","value","aria-labelledby","valueLabelDisplay","step","marks","min","max","onChange","event","StatDisplay","App","spacing","xs","md","lg","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","state","middlewares","applyMiddleware","thunk","store","createStore","reducers","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e7983ef.chunk.js","sourcesContent":["import React from 'react'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nfunction CharacterName() {\r\n    return (\r\n        <Paper elevation={3} style={{marginTop:10}}>\r\n             <TextField fullWidth id=\"standard-basic\" label=\"Name\"/>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default CharacterName\r\n","import React from 'react'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { CarouselProvider, Slider, Slide, ButtonBack, ButtonNext } from 'pure-react-carousel';\r\nimport 'pure-react-carousel/dist/react-carousel.es.css';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nfunction CharacterSelect() {\r\n    const useStyle = makeStyles((theme) => ({\r\n        image: {\r\n            marginTop: 10,\r\n            marginLeft: 10,\r\n            width: 200,\r\n            height: 'auto',\r\n        },\r\n    }));\r\n\r\n    const [CharacterList] = React.useState([\r\n        'pic1', 'pic2', 'pic3', 'pic4'\r\n    ])\r\n\r\n    const [TotalCharactors, setTotalCharactors] = React.useState(0)\r\n\r\n    React.useEffect(() => {\r\n        setTotalCharactors(CharacterList.length)\r\n    }, [CharacterList])\r\n\r\n    const classes = useStyle();\r\n    return (\r\n        <Paper elevation={3}>\r\n            <CarouselProvider\r\n                naturalSlideWidth={100}\r\n                naturalSlideHeight={60}\r\n                totalSlides={TotalCharactors}\r\n                infinite\r\n            >\r\n                <Slider>\r\n                    {CharacterList.map((item, index) => (\r\n                        <Slide key={item} index={index}>\r\n                            <Grid container\r\n                                direction=\"row\"\r\n                                justify=\"center\"\r\n                                alignItems=\"center\"\r\n                            >\r\n                                <img\r\n                                    className={classes.image}\r\n                                    alt=\"\"\r\n                                    src={`${process.env.PUBLIC_URL}/pic/${item}.png`}\r\n                                />\r\n                            </Grid>\r\n                        </Slide>\r\n                    )\r\n                    )}\r\n                </Slider>\r\n            </CarouselProvider>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default CharacterSelect\r\n","import React from 'react'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chart from \"react-apexcharts\";\r\nimport {useSelector} from 'react-redux'\r\n\r\nfunction StatChart() {\r\n        \r\n        const attributeReducer = useSelector(({attribute})=>attribute)\r\n        const [chartOption,setchartOption] = React.useState({})\r\n        const [chartSeries,setchartSeries] = React.useState([])\r\n\r\n        React.useEffect(() => {\r\n          setchartOption({\r\n            chart: {\r\n              id: \"basic-bar\"\r\n            },\r\n            xaxis: {\r\n              categories: [...attributeReducer.attributeList],\r\n            }\r\n          });\r\n          setchartSeries([\r\n              {\r\n                name: \"series-1\",\r\n                data: [...attributeReducer.attributeValue],\r\n              }\r\n          ]);\r\n        }, [attributeReducer])\r\n\r\n\r\n    return (\r\n        <Paper elevation={3}>\r\n          {attributeReducer.name}\r\n            <Chart\r\n                options={chartOption}\r\n                series={chartSeries}\r\n                type=\"radar\"\r\n                width=\"100%\"\r\n            />\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default StatChart\r\n","/* eslint-disable import/no-anonymous-default-export */\r\n\r\n\r\n//Action Type\r\nexport const actionTypes = {\r\n    CHANGE_ATTRIBUTE_VALUE: \"[CHANGE ATTRIBUTE VALUE] Action\",\r\n}\r\n\r\n//State\r\nconst initialState = {\r\n    name: 'test',\r\n    attributeList: [\r\n        'STR','AGI','DEX','LUK','INT','VIT'\r\n    ],\r\n    attributeValue: [\r\n        1,2,3,4,5,6,20\r\n    ],\r\n}\r\n\r\n//Reducer\r\nexport const reducer = (state = initialState, { type, payload }) => {\r\n    switch (type) {\r\n      case actionTypes.CHANGE_ATTRIBUTE_VALUE:\r\n        return { ...state, attributeValue: payload };\r\n\r\n      default:\r\n        return state;\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    changeAttrValue: (payload) => ({ type: actionTypes.CHANGE_ATTRIBUTE_VALUE, payload }),\r\n};","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport * as attributeRedux from '../reducers/attribute.reducer';\r\n\r\nfunction StatAttribute(props) {\r\n\r\n    const dispatch = useDispatch();\r\n    const attReducer = useSelector(({attribute}) => attribute)\r\n\r\n    const [name, setname] = React.useState('')\r\n    const [attributeValue, setattributeValue] = React.useState(5)\r\n\r\n    useEffect(() => {\r\n        //set name\r\n     setname(attReducer.attributeList[props.index])\r\n\r\n     //set value\r\n     setattributeValue(attReducer.attributeValue[props.index])\r\n\r\n    }, [props.index])\r\n\r\n    useEffect(() => {\r\n\r\n        //update redux value\r\n        let obj = [...attReducer.attributeValue]\r\n        obj[props.index]= attributeValue;\r\n        dispatch(attributeRedux.actions.changeAttrValue(obj))\r\n\r\n    }, [attributeValue])\r\n\r\n    function valuetext(value) {\r\n        return `${value}°C`;\r\n      }\r\n    return (\r\n        <Paper style={{padding:5,margin:5}}>\r\n        <Typography id=\"discrete-slider\" gutterBottom>\r\n        {name}\r\n      </Typography>\r\n      <Slider\r\n        defaultValue={1}\r\n        getAriaValueText={valuetext}\r\n        aria-labelledby=\"discrete-slider\"\r\n        valueLabelDisplay=\"auto\"\r\n        step={1}\r\n        marks\r\n        min={1}\r\n        max={15}\r\n        value={attributeValue}\r\n        onChange={(event,value)=>{\r\n            setattributeValue(value)\r\n        }}\r\n      />\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default StatAttribute\r\n","import React from 'react'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport StatAttribute from './StatAttribute'\r\nimport {useSelector} from \"react-redux\"\r\nfunction StatDisplay() {\r\n    const attReducer = useSelector(({attribute})=>attribute)\r\n    return (\r\n        <Paper elevation={3}>\r\n            {attReducer.attributeList.map((item,index)=>(\r\n            <StatAttribute key={index} index={index}></StatAttribute>\r\n            ))}\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default StatDisplay\r\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid';\nimport CharacterName from \"./components/CharacterName\";\nimport CharacterSelect from \"./components/CharacterSelect\"\nimport StatChart from \"./components/StatChart\"\nimport StatDisplay from \"./components/StatDisplay\"\n\nfunction App() {\n  return (\n    <Grid spacing={3} container direction=\"row\" alignItems=\"flex-start\" style={{padding:10}}>\n      {/* Charrector select */}\n      <Grid item xs={12} md={4} lg={4}>\n        <CharacterSelect></CharacterSelect>\n        <CharacterName></CharacterName>\n      </Grid>\n      {/* End Charrector select */}\n\n      {/* StatChart */}\n      <Grid item xs={8} md={4} lg={4}>\n            <StatChart></StatChart>\n      </Grid>\n      {/* End StatChart */}\n\n      {/* StatDisplay */}\n      <Grid item xs={4} md={4} lg={4}>\n            <StatDisplay></StatDisplay>\n      </Grid>\n      {/* End StatDisplay */}\n    </Grid>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers} from 'redux'\r\nimport * as attribute from './attribute.reducer'\r\nexport default combineReducers({\r\n    attribute: attribute.reducer\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n//redux\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport reducers from \"./reducers\";\n//end redux\n\nvar middlewares = applyMiddleware(thunk);\n\n\nconst store = createStore(reducers, middlewares);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}